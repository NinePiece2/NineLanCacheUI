// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NineLanCacheUI_API.Data;

#nullable disable

namespace NineLanCacheUI_API.Migrations
{
    [DbContext(typeof(NineLanCacheUIDBContext))]
    [Migration("20250724033815_SQLite")]
    partial class SQLite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("NineLanCacheUI_API.Data.Tables.DbDownloadEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CacheHitBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CacheIdentifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CacheMissBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<uint?>("DownloadIdentifier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DownloadIdentifierString")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CacheIdentifier");

                    b.HasIndex("ClientIp");

                    b.ToTable("DownloadEvents");
                });

            modelBuilder.Entity("NineLanCacheUI_API.Data.Tables.DbExcludedIp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IpAddress")
                        .IsUnique();

                    b.ToTable("ExcludedIps");
                });

            modelBuilder.Entity("NineLanCacheUI_API.Data.Tables.DbSetting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("NineLanCacheUI_API.Data.Tables.DbSteamDepot", b =>
                {
                    b.Property<uint>("SteamDepotId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("SteamAppId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SteamDepotId", "SteamAppId");

                    b.ToTable("SteamDepots");
                });

            modelBuilder.Entity("NineLanCacheUI_API.Data.Tables.DbSteamManifest", b =>
                {
                    b.Property<uint>("DepotId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ManifestBytesSize")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TotalCompressedSize")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TotalUncompressedSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniqueManifestIdentifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DepotId", "CreationTime");

                    b.HasIndex("UniqueManifestIdentifier")
                        .IsUnique();

                    b.ToTable("SteamManifests");
                });
#pragma warning restore 612, 618
        }
    }
}
